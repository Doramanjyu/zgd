name: ci
on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: ap-northeast-1

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      deployable: ${{ steps.deployable.outputs.deployable }}
    steps:
      - uses: actions/checkout@v3
      - name: Enable corepack
        run: corepack enable
      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: yarn

      - uses: actions/checkout@v3
        if: github.event_name == 'push'
        with:
          path: gh-pages
          ref: gh-pages

      - name: Install deps
        run: yarn
      - name: Build
        run: yarn build

      - name: Prepare deploy
        run: |
          mkdir -p gh-pages/public
          cp -ra public/* gh-pages/
          cp -ra dist/* gh-pages/public/

      - name: Check deployable
        id: deployable
        run: |
          if [ "$(git ls-remote -q --head origin main | cut -f1)" = ${GITHUB_SHA} ]; then
            echo 'deployable=true' | tee -a ${GITHUB_OUTPUT}
          else
            echo 'deployable=false' | tee -a ${GITHUB_OUTPUT}
          fi

      - name: Deploy
        if: github.event_name == 'push' && steps.deployable.outputs.deployable == 'true'
        run: |
          cd gh-pages
          git config user.name "Doramanjyu"
          git config user.email "24859285+Doramanjyu@users.noreply.github.com"
          git add .
          git commit -m "Deploy ${GITHUB_SHA}" --allow-empty
          git push origin gh-pages

      - name: Configure AWS credentials
        if: github.event_name != 'pull_request'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Configure AWS credentials (for dry-run)
        if: github.event_name == 'pull_request'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_RO }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Upload
        if: github.event_name != 'pull_request' && steps.deployable.outputs.deployable == 'true'
        run: |
          rm -rf gh-pages/.git
          aws s3 sync gh-pages/ s3://jebagrad2023web/
      - name: Upload (dry-run)
        if: github.event_name == 'pull_request'
        run: |
          rm -rf gh-pages/.git
          aws s3 sync --dryrun gh-pages/ s3://jebagrad2023web/

  notification:
    needs: ci
    permissions:
      pull-requests: write
    if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Get PR number
        id: pr_number
        uses: kamatama41/get-pr-number-action@v0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install gh-pr-comment
        uses: at-wat/setup-gh-pr-comment@v0
      - name: Notify skip
        if: needs.ci.result == 'success' && needs.ci.outputs.deployable != 'true'
        run: |
          gh-pr-comment -pr ${{ steps.pr_number.outputs.number }} ":next_track_button: Deploy skipped" ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Notify succeeded
        if: needs.ci.result == 'success' && needs.ci.outputs.deployable == 'true'
        run: |
          gh-pr-comment -pr ${{ steps.pr_number.outputs.number }} ":rocket: Deployed" ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Notify failed
        if: needs.ci.result != 'success'
        run: |
          gh-pr-comment -pr ${{ steps.pr_number.outputs.number }} ":x: Deploy failed" ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
